import type AppiumCommands from '@wdio/protocols/src/commands/appium.js';
import type ChromiumCommands from '@wdio/protocols/src/commands/chromium.js';
import type GeckoCommands from '@wdio/protocols/src/commands/gecko.js';
import type JSONWPCommands from '@wdio/protocols/src/commands/jsonwp.js';
import type MJSONWPCommands from '@wdio/protocols/src/commands/mjsonwp.js';
import type SauceLabsCommands from '@wdio/protocols/src/commands/saucelabs.js';
import type SeleniumCommands from '@wdio/protocols/src/commands/selenium.js';
import type WebDriverCommands from '@wdio/protocols/src/commands/webdriver.js';
import WebDriverProtocol from '@wdio/protocols/src/protocols/webdriver.js';
import WebDriverBidiProtocol from '@wdio/protocols/src/protocols/webdriverBidi.js';
import MJsonWProtocol from '@wdio/protocols/src/protocols/mjsonwp.js';
import JsonWProtocol from '@wdio/protocols/src/protocols/jsonwp.js';
import AppiumProtocol from '@wdio/protocols/src/protocols/appium.js';
import ChromiumProtocol from '@wdio/protocols/src/protocols/chromium.js';
import GeckoProtocol from '@wdio/protocols/src/protocols/gecko.js';
import SauceLabsProtocol from '@wdio/protocols/src/protocols/saucelabs.js';
import SeleniumProtocol from '@wdio/protocols/src/protocols/selenium.js';
export interface ProtocolCommands extends WebDriverCommands, Omit<JSONWPCommands, keyof WebDriverCommands>, AppiumCommands, ChromiumCommands, Omit<MJSONWPCommands, keyof AppiumCommands | keyof ChromiumCommands>, SauceLabsCommands, SeleniumCommands, GeckoCommands {
}
export * from '@wdio/protocols/src/types.js';
export { WebDriverProtocol, MJsonWProtocol, JsonWProtocol, AppiumProtocol, ChromiumProtocol, SauceLabsProtocol, SeleniumProtocol, GeckoProtocol, WebDriverBidiProtocol, AppiumCommands, ChromiumCommands, JSONWPCommands, MJSONWPCommands, SauceLabsCommands, SeleniumCommands, WebDriverCommands, GeckoCommands };
export declare const CAPABILITY_KEYS: string[];
//# sourceMappingURL=index.d.ts.map